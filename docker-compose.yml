version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:80"
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keuangan_umum
      MYSQL_USER: veansyah
      MYSQL_PASSWORD: 9968Siskom
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: veansyah
      PMA_PASSWORD: 9968Siskom
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - laravel_network

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    command: php artisan queue:work
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    command: bash -c "while true; do php artisan schedule:run; sleep 60; done"
    networks:
      - laravel_network
    depends_on:
      - mysql
      - redis

volumes:
  mysql_data:
  redis_data:

networks:
  laravel_network:
    driver: bridge